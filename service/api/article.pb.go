// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: article.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content  string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Status   int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	AuthorID int64  `protobuf:"varint,5,opt,name=authorID,proto3" json:"authorID,omitempty"`
}

func (x *Article) Reset() {
	*x = Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{0}
}

func (x *Article) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Article) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Article) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Article) GetAuthorID() int64 {
	if x != nil {
		return x.AuthorID
	}
	return 0
}

type SaveArticleRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveArticleRep) Reset() {
	*x = SaveArticleRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveArticleRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveArticleRep) ProtoMessage() {}

func (x *SaveArticleRep) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveArticleRep.ProtoReflect.Descriptor instead.
func (*SaveArticleRep) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{1}
}

func (x *SaveArticleRep) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ViewDraftedArticlesOfAuthorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *ViewDraftedArticlesOfAuthorReq) Reset() {
	*x = ViewDraftedArticlesOfAuthorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDraftedArticlesOfAuthorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDraftedArticlesOfAuthorReq) ProtoMessage() {}

func (x *ViewDraftedArticlesOfAuthorReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDraftedArticlesOfAuthorReq.ProtoReflect.Descriptor instead.
func (*ViewDraftedArticlesOfAuthorReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{2}
}

func (x *ViewDraftedArticlesOfAuthorReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type ViewDraftedArticlesOfAuthorRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*Article `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *ViewDraftedArticlesOfAuthorRep) Reset() {
	*x = ViewDraftedArticlesOfAuthorRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDraftedArticlesOfAuthorRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDraftedArticlesOfAuthorRep) ProtoMessage() {}

func (x *ViewDraftedArticlesOfAuthorRep) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDraftedArticlesOfAuthorRep.ProtoReflect.Descriptor instead.
func (*ViewDraftedArticlesOfAuthorRep) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{3}
}

func (x *ViewDraftedArticlesOfAuthorRep) GetArticles() []*Article {
	if x != nil {
		return x.Articles
	}
	return nil
}

type ViewPublishedArticlesOfAuthorRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*Article `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *ViewPublishedArticlesOfAuthorRep) Reset() {
	*x = ViewPublishedArticlesOfAuthorRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewPublishedArticlesOfAuthorRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewPublishedArticlesOfAuthorRep) ProtoMessage() {}

func (x *ViewPublishedArticlesOfAuthorRep) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewPublishedArticlesOfAuthorRep.ProtoReflect.Descriptor instead.
func (*ViewPublishedArticlesOfAuthorRep) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{4}
}

func (x *ViewPublishedArticlesOfAuthorRep) GetArticles() []*Article {
	if x != nil {
		return x.Articles
	}
	return nil
}

type ViewArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ViewArticleReq) Reset() {
	*x = ViewArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewArticleReq) ProtoMessage() {}

func (x *ViewArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewArticleReq.ProtoReflect.Descriptor instead.
func (*ViewArticleReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{5}
}

func (x *ViewArticleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PublishArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID int64 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *PublishArticleReq) Reset() {
	*x = PublishArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishArticleReq) ProtoMessage() {}

func (x *PublishArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishArticleReq.ProtoReflect.Descriptor instead.
func (*PublishArticleReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{6}
}

func (x *PublishArticleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PublishArticleReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type PublishArticleRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishArticleRep) Reset() {
	*x = PublishArticleRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishArticleRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishArticleRep) ProtoMessage() {}

func (x *PublishArticleRep) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishArticleRep.ProtoReflect.Descriptor instead.
func (*PublishArticleRep) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{7}
}

type PublishDraftRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishDraftRep) Reset() {
	*x = PublishDraftRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishDraftRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDraftRep) ProtoMessage() {}

func (x *PublishDraftRep) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDraftRep.ProtoReflect.Descriptor instead.
func (*PublishDraftRep) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{8}
}

type ViewPublishedArticlesOfAuthorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *ViewPublishedArticlesOfAuthorReq) Reset() {
	*x = ViewPublishedArticlesOfAuthorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewPublishedArticlesOfAuthorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewPublishedArticlesOfAuthorReq) ProtoMessage() {}

func (x *ViewPublishedArticlesOfAuthorReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewPublishedArticlesOfAuthorReq.ProtoReflect.Descriptor instead.
func (*ViewPublishedArticlesOfAuthorReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{9}
}

func (x *ViewPublishedArticlesOfAuthorReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type ViewDraftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ViewDraftReq) Reset() {
	*x = ViewDraftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDraftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDraftReq) ProtoMessage() {}

func (x *ViewDraftReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDraftReq.ProtoReflect.Descriptor instead.
func (*ViewDraftReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{10}
}

func (x *ViewDraftReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SaveDraftRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveDraftRep) Reset() {
	*x = SaveDraftRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDraftRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDraftRep) ProtoMessage() {}

func (x *SaveDraftRep) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDraftRep.ProtoReflect.Descriptor instead.
func (*SaveDraftRep) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{11}
}

type ViewAllArticlesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ViewAllArticlesReq) Reset() {
	*x = ViewAllArticlesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewAllArticlesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewAllArticlesReq) ProtoMessage() {}

func (x *ViewAllArticlesReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewAllArticlesReq.ProtoReflect.Descriptor instead.
func (*ViewAllArticlesReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{12}
}

type ViewAllArticlesRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Articles []*Article `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *ViewAllArticlesRep) Reset() {
	*x = ViewAllArticlesRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewAllArticlesRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewAllArticlesRep) ProtoMessage() {}

func (x *ViewAllArticlesRep) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewAllArticlesRep.ProtoReflect.Descriptor instead.
func (*ViewAllArticlesRep) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{13}
}

func (x *ViewAllArticlesRep) GetArticles() []*Article {
	if x != nil {
		return x.Articles
	}
	return nil
}

var File_article_proto protoreflect.FileDescriptor

var file_article_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x61, 0x70, 0x69, 0x22, 0x7d, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x49, 0x44, 0x22, 0x20, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x1e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x4a, 0x0a, 0x1e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65,
	0x70, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x20, 0x56,
	0x69, 0x65, 0x77, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x12,
	0x28, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x0e, 0x56, 0x69, 0x65,
	0x77, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x22, 0x11, 0x0a,
	0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70,
	0x22, 0x3a, 0x0a, 0x20, 0x56, 0x69, 0x65, 0x77, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x1e, 0x0a, 0x0c,
	0x56, 0x69, 0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c,
	0x53, 0x61, 0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x22, 0x14, 0x0a, 0x12,
	0x56, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x22, 0x3e, 0x0a, 0x12, 0x56, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x6c, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x32, 0xdc, 0x04, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x30,
	0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x12, 0x67, 0x0a, 0x1b, 0x56, 0x69, 0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x65, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x65,
	0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x56, 0x69, 0x65,
	0x77, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x12, 0x6d, 0x0a,
	0x1d, 0x56, 0x69, 0x65, 0x77, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x25,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x4f, 0x66, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x12, 0x2c, 0x0a, 0x09,
	0x56, 0x69, 0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x53, 0x61,
	0x76, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x12, 0x32, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x12, 0x43, 0x0a, 0x0f,
	0x56, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x6c, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x41, 0x6c, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_article_proto_rawDescOnce sync.Once
	file_article_proto_rawDescData = file_article_proto_rawDesc
)

func file_article_proto_rawDescGZIP() []byte {
	file_article_proto_rawDescOnce.Do(func() {
		file_article_proto_rawDescData = protoimpl.X.CompressGZIP(file_article_proto_rawDescData)
	})
	return file_article_proto_rawDescData
}

var file_article_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_article_proto_goTypes = []interface{}{
	(*Article)(nil),                          // 0: api.Article
	(*SaveArticleRep)(nil),                   // 1: api.SaveArticleRep
	(*ViewDraftedArticlesOfAuthorReq)(nil),   // 2: api.ViewDraftedArticlesOfAuthorReq
	(*ViewDraftedArticlesOfAuthorRep)(nil),   // 3: api.ViewDraftedArticlesOfAuthorRep
	(*ViewPublishedArticlesOfAuthorRep)(nil), // 4: api.ViewPublishedArticlesOfAuthorRep
	(*ViewArticleReq)(nil),                   // 5: api.ViewArticleReq
	(*PublishArticleReq)(nil),                // 6: api.PublishArticleReq
	(*PublishArticleRep)(nil),                // 7: api.PublishArticleRep
	(*PublishDraftRep)(nil),                  // 8: api.PublishDraftRep
	(*ViewPublishedArticlesOfAuthorReq)(nil), // 9: api.ViewPublishedArticlesOfAuthorReq
	(*ViewDraftReq)(nil),                     // 10: api.ViewDraftReq
	(*SaveDraftRep)(nil),                     // 11: api.SaveDraftRep
	(*ViewAllArticlesReq)(nil),               // 12: api.ViewAllArticlesReq
	(*ViewAllArticlesRep)(nil),               // 13: api.ViewAllArticlesRep
}
var file_article_proto_depIdxs = []int32{
	0,  // 0: api.ViewDraftedArticlesOfAuthorRep.articles:type_name -> api.Article
	0,  // 1: api.ViewPublishedArticlesOfAuthorRep.articles:type_name -> api.Article
	0,  // 2: api.ViewAllArticlesRep.articles:type_name -> api.Article
	0,  // 3: api.article.SaveArticle:input_type -> api.Article
	2,  // 4: api.article.ViewDraftedArticlesOfAuthor:input_type -> api.ViewDraftedArticlesOfAuthorReq
	5,  // 5: api.article.ViewArticle:input_type -> api.ViewArticleReq
	6,  // 6: api.article.PublishArticle:input_type -> api.PublishArticleReq
	9,  // 7: api.article.ViewPublishedArticlesOfAuthor:input_type -> api.ViewPublishedArticlesOfAuthorReq
	10, // 8: api.article.ViewDraft:input_type -> api.ViewDraftReq
	0,  // 9: api.article.SaveDraft:input_type -> api.Article
	0,  // 10: api.article.PublishDraft:input_type -> api.Article
	12, // 11: api.article.ViewAllArticles:input_type -> api.ViewAllArticlesReq
	1,  // 12: api.article.SaveArticle:output_type -> api.SaveArticleRep
	3,  // 13: api.article.ViewDraftedArticlesOfAuthor:output_type -> api.ViewDraftedArticlesOfAuthorRep
	0,  // 14: api.article.ViewArticle:output_type -> api.Article
	7,  // 15: api.article.PublishArticle:output_type -> api.PublishArticleRep
	4,  // 16: api.article.ViewPublishedArticlesOfAuthor:output_type -> api.ViewPublishedArticlesOfAuthorRep
	0,  // 17: api.article.ViewDraft:output_type -> api.Article
	11, // 18: api.article.SaveDraft:output_type -> api.SaveDraftRep
	8,  // 19: api.article.PublishDraft:output_type -> api.PublishDraftRep
	13, // 20: api.article.ViewAllArticles:output_type -> api.ViewAllArticlesRep
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_article_proto_init() }
func file_article_proto_init() {
	if File_article_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_article_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveArticleRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDraftedArticlesOfAuthorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDraftedArticlesOfAuthorRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewPublishedArticlesOfAuthorRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishArticleRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishDraftRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewPublishedArticlesOfAuthorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDraftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDraftRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewAllArticlesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewAllArticlesRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_article_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_article_proto_goTypes,
		DependencyIndexes: file_article_proto_depIdxs,
		MessageInfos:      file_article_proto_msgTypes,
	}.Build()
	File_article_proto = out.File
	file_article_proto_rawDesc = nil
	file_article_proto_goTypes = nil
	file_article_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ArticleClient is the client API for Article service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArticleClient interface {
	SaveArticle(ctx context.Context, in *Article, opts ...grpc.CallOption) (*SaveArticleRep, error)
	ViewDraftedArticlesOfAuthor(ctx context.Context, in *ViewDraftedArticlesOfAuthorReq, opts ...grpc.CallOption) (*ViewDraftedArticlesOfAuthorRep, error)
	ViewArticle(ctx context.Context, in *ViewArticleReq, opts ...grpc.CallOption) (*Article, error)
	PublishArticle(ctx context.Context, in *PublishArticleReq, opts ...grpc.CallOption) (*PublishArticleRep, error)
	ViewPublishedArticlesOfAuthor(ctx context.Context, in *ViewPublishedArticlesOfAuthorReq, opts ...grpc.CallOption) (*ViewPublishedArticlesOfAuthorRep, error)
	ViewDraft(ctx context.Context, in *ViewDraftReq, opts ...grpc.CallOption) (*Article, error)
	SaveDraft(ctx context.Context, in *Article, opts ...grpc.CallOption) (*SaveDraftRep, error)
	PublishDraft(ctx context.Context, in *Article, opts ...grpc.CallOption) (*PublishDraftRep, error)
	ViewAllArticles(ctx context.Context, in *ViewAllArticlesReq, opts ...grpc.CallOption) (*ViewAllArticlesRep, error)
}

type articleClient struct {
	cc grpc.ClientConnInterface
}

func NewArticleClient(cc grpc.ClientConnInterface) ArticleClient {
	return &articleClient{cc}
}

func (c *articleClient) SaveArticle(ctx context.Context, in *Article, opts ...grpc.CallOption) (*SaveArticleRep, error) {
	out := new(SaveArticleRep)
	err := c.cc.Invoke(ctx, "/api.article/SaveArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleClient) ViewDraftedArticlesOfAuthor(ctx context.Context, in *ViewDraftedArticlesOfAuthorReq, opts ...grpc.CallOption) (*ViewDraftedArticlesOfAuthorRep, error) {
	out := new(ViewDraftedArticlesOfAuthorRep)
	err := c.cc.Invoke(ctx, "/api.article/ViewDraftedArticlesOfAuthor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleClient) ViewArticle(ctx context.Context, in *ViewArticleReq, opts ...grpc.CallOption) (*Article, error) {
	out := new(Article)
	err := c.cc.Invoke(ctx, "/api.article/ViewArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleClient) PublishArticle(ctx context.Context, in *PublishArticleReq, opts ...grpc.CallOption) (*PublishArticleRep, error) {
	out := new(PublishArticleRep)
	err := c.cc.Invoke(ctx, "/api.article/PublishArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleClient) ViewPublishedArticlesOfAuthor(ctx context.Context, in *ViewPublishedArticlesOfAuthorReq, opts ...grpc.CallOption) (*ViewPublishedArticlesOfAuthorRep, error) {
	out := new(ViewPublishedArticlesOfAuthorRep)
	err := c.cc.Invoke(ctx, "/api.article/ViewPublishedArticlesOfAuthor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleClient) ViewDraft(ctx context.Context, in *ViewDraftReq, opts ...grpc.CallOption) (*Article, error) {
	out := new(Article)
	err := c.cc.Invoke(ctx, "/api.article/ViewDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleClient) SaveDraft(ctx context.Context, in *Article, opts ...grpc.CallOption) (*SaveDraftRep, error) {
	out := new(SaveDraftRep)
	err := c.cc.Invoke(ctx, "/api.article/SaveDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleClient) PublishDraft(ctx context.Context, in *Article, opts ...grpc.CallOption) (*PublishDraftRep, error) {
	out := new(PublishDraftRep)
	err := c.cc.Invoke(ctx, "/api.article/PublishDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleClient) ViewAllArticles(ctx context.Context, in *ViewAllArticlesReq, opts ...grpc.CallOption) (*ViewAllArticlesRep, error) {
	out := new(ViewAllArticlesRep)
	err := c.cc.Invoke(ctx, "/api.article/ViewAllArticles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArticleServer is the server API for Article service.
type ArticleServer interface {
	SaveArticle(context.Context, *Article) (*SaveArticleRep, error)
	ViewDraftedArticlesOfAuthor(context.Context, *ViewDraftedArticlesOfAuthorReq) (*ViewDraftedArticlesOfAuthorRep, error)
	ViewArticle(context.Context, *ViewArticleReq) (*Article, error)
	PublishArticle(context.Context, *PublishArticleReq) (*PublishArticleRep, error)
	ViewPublishedArticlesOfAuthor(context.Context, *ViewPublishedArticlesOfAuthorReq) (*ViewPublishedArticlesOfAuthorRep, error)
	ViewDraft(context.Context, *ViewDraftReq) (*Article, error)
	SaveDraft(context.Context, *Article) (*SaveDraftRep, error)
	PublishDraft(context.Context, *Article) (*PublishDraftRep, error)
	ViewAllArticles(context.Context, *ViewAllArticlesReq) (*ViewAllArticlesRep, error)
}

// UnimplementedArticleServer can be embedded to have forward compatible implementations.
type UnimplementedArticleServer struct {
}

func (*UnimplementedArticleServer) SaveArticle(context.Context, *Article) (*SaveArticleRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveArticle not implemented")
}
func (*UnimplementedArticleServer) ViewDraftedArticlesOfAuthor(context.Context, *ViewDraftedArticlesOfAuthorReq) (*ViewDraftedArticlesOfAuthorRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewDraftedArticlesOfAuthor not implemented")
}
func (*UnimplementedArticleServer) ViewArticle(context.Context, *ViewArticleReq) (*Article, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewArticle not implemented")
}
func (*UnimplementedArticleServer) PublishArticle(context.Context, *PublishArticleReq) (*PublishArticleRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishArticle not implemented")
}
func (*UnimplementedArticleServer) ViewPublishedArticlesOfAuthor(context.Context, *ViewPublishedArticlesOfAuthorReq) (*ViewPublishedArticlesOfAuthorRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewPublishedArticlesOfAuthor not implemented")
}
func (*UnimplementedArticleServer) ViewDraft(context.Context, *ViewDraftReq) (*Article, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewDraft not implemented")
}
func (*UnimplementedArticleServer) SaveDraft(context.Context, *Article) (*SaveDraftRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveDraft not implemented")
}
func (*UnimplementedArticleServer) PublishDraft(context.Context, *Article) (*PublishDraftRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishDraft not implemented")
}
func (*UnimplementedArticleServer) ViewAllArticles(context.Context, *ViewAllArticlesReq) (*ViewAllArticlesRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewAllArticles not implemented")
}

func RegisterArticleServer(s *grpc.Server, srv ArticleServer) {
	s.RegisterService(&_Article_serviceDesc, srv)
}

func _Article_SaveArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Article)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServer).SaveArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.article/SaveArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServer).SaveArticle(ctx, req.(*Article))
	}
	return interceptor(ctx, in, info, handler)
}

func _Article_ViewDraftedArticlesOfAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewDraftedArticlesOfAuthorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServer).ViewDraftedArticlesOfAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.article/ViewDraftedArticlesOfAuthor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServer).ViewDraftedArticlesOfAuthor(ctx, req.(*ViewDraftedArticlesOfAuthorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Article_ViewArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewArticleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServer).ViewArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.article/ViewArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServer).ViewArticle(ctx, req.(*ViewArticleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Article_PublishArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishArticleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServer).PublishArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.article/PublishArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServer).PublishArticle(ctx, req.(*PublishArticleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Article_ViewPublishedArticlesOfAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewPublishedArticlesOfAuthorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServer).ViewPublishedArticlesOfAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.article/ViewPublishedArticlesOfAuthor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServer).ViewPublishedArticlesOfAuthor(ctx, req.(*ViewPublishedArticlesOfAuthorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Article_ViewDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewDraftReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServer).ViewDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.article/ViewDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServer).ViewDraft(ctx, req.(*ViewDraftReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Article_SaveDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Article)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServer).SaveDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.article/SaveDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServer).SaveDraft(ctx, req.(*Article))
	}
	return interceptor(ctx, in, info, handler)
}

func _Article_PublishDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Article)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServer).PublishDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.article/PublishDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServer).PublishDraft(ctx, req.(*Article))
	}
	return interceptor(ctx, in, info, handler)
}

func _Article_ViewAllArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewAllArticlesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServer).ViewAllArticles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.article/ViewAllArticles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServer).ViewAllArticles(ctx, req.(*ViewAllArticlesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Article_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.article",
	HandlerType: (*ArticleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveArticle",
			Handler:    _Article_SaveArticle_Handler,
		},
		{
			MethodName: "ViewDraftedArticlesOfAuthor",
			Handler:    _Article_ViewDraftedArticlesOfAuthor_Handler,
		},
		{
			MethodName: "ViewArticle",
			Handler:    _Article_ViewArticle_Handler,
		},
		{
			MethodName: "PublishArticle",
			Handler:    _Article_PublishArticle_Handler,
		},
		{
			MethodName: "ViewPublishedArticlesOfAuthor",
			Handler:    _Article_ViewPublishedArticlesOfAuthor_Handler,
		},
		{
			MethodName: "ViewDraft",
			Handler:    _Article_ViewDraft_Handler,
		},
		{
			MethodName: "SaveDraft",
			Handler:    _Article_SaveDraft_Handler,
		},
		{
			MethodName: "PublishDraft",
			Handler:    _Article_PublishDraft_Handler,
		},
		{
			MethodName: "ViewAllArticles",
			Handler:    _Article_ViewAllArticles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "article.proto",
}
